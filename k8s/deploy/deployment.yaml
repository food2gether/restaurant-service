---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restaurant-service
  namespace: food2gether
  labels:
    app: restaurant-service
spec:
  selector:
    matchLabels:
      app: restaurant-service
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container:  restaurant-service
      labels:
        app: restaurant-service
    spec:
      containers:
      - name: restaurant-service
        image: ghcr.io/food2gether/restaurant-service:1.0.1-jvm
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        env: 
          - name: QUARKUS_DATASOURCE_USERNAME
            valueFrom:
              secretKeyRef:
                name: database
                key: username
          - name: QUARKUS_DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: database
                key: password
          # This is a workaround to combine various values from secrets into a single value
          - name: DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name: database
                key: host
          - name: DATABASE_PORT
            valueFrom:
              secretKeyRef:
                name: database
                key: port
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: database
                key: database
          - name: QUARKUS_DATASOURCE_JDBC_URL
            value: jdbc:postgresql://$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)
        ports:
        - containerPort: 8080
          name: http
      restartPolicy: Always
